pipeline {
  
    environment {
        CLUSTER = ""
        CLUSTER_ZONE = ""
        JENKINS_CRED = "robotic-tide-284315"
    }

    agent {
        kubernetes {
        label 'pipeline'
        defaultContainer 'jnlp'
        yamlFile 'pipeline_jobs.yaml'
        
        }
    }

    stages {

        stage("Checkout Code") {
            steps {
            checkout scm
            }
        }  

        stage('Download Dataset') {

            steps {
                container('kubectl') {
                    sh 'cd ./etl_scripts/featurestore'
                    sh 'curl -o iris.txt  https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
                }
            }
        }
    
        stage('Pre-Processing') {
     
            steps {
                container('python') {
                    sh 'pip install -r etl_scripts/etl_preproc/requirements.txt'
                    sh 'python etl_scripts/etl_preproc/etl_preprocessing.py'
                    sh 'tail etl_scripts/featurestore/irisEncoder.txt'
                } 
            }
        }

        stage('Traning Model') {
     
            steps {
                container('python') {
                    sh 'pip install -r etl_scripts/traning_model/requirements.txt'
                    sh 'python etl_scripts/traning_model/ml_sklearn.py'
                } 
            }
        }

        stage('Validate Model') {
     
            steps {
                container('python') {
                    sh 'pip install -r etl_scripts/validate_model/requirements.txt'
                    sh 'python etl_scripts/validate_model/validateModel.py'
                    sh 'ls deployApi/apiIris/'
                } 
            }
        }
  
        stage('Build Image') {
     
            steps {
                container('python') {
                    withCredentials([certificate(aliasVariable: '', credentialsId: "1f5c7557-e0b7-47c0-8702-5803764f6102", keystoreVariable: "GCP_KEY", passwordVariable: '')]) {
                        sh "echo 'deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main' | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list"
                        sh 'curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -'
                        sh 'apt-get update && apt-get install google-cloud-sdk -y'
                        sh 'export CLOUDSDK_PYTHON_SITEPACKAGES=1'
                        sh 'pip install pyOpenSSL'
                        sh 'gcloud config set project robotic-tide-284315'
                        sh "gcloud auth activate-service-account jenkins@robotic-tide-284315.iam.gserviceaccount.com --key-file='${GCP_KEY}'"
                        sh 'PYTHONUNBUFFERED=1 gcloud builds submit --config deployApi/apiIris/cloudbuild.yaml deployApi/apiIris/'
                    }
                } 
            }
        }

        stage('Deploy Model API') {
     
            steps {
                container('kubectl') {
                    withCredentials([file(credentialsId: "robotic-tide-284315", variable: "GCS_KEY")]) {
                        sh "kubectl create secret docker-registry gcr-json-key \
                                --docker-server=gcr.io \
                                --docker-username=_json_key \
                                --docker-password=${GCP_KEY} \
                                --docker-email=any@valid.email"
                        sh 'kubectl apply -f deployApi/apiIris/k8s-artifacts/'
                    }
                } 
            }
        }

    }

}

  